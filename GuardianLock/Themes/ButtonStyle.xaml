<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!--Menu button-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal button style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource color11}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>

            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource color5}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu button icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="35,0,15,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="/Fonts/#Poppins"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Login/Register button-->
    <Style x:Key="loginButton" TargetType="Button">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Background" Value="{StaticResource color5}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource color5}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            
            <!--Button Style on click-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource color5}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            
            <!--Button Style on disabled-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource color5}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>